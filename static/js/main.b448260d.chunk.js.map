{"version":3,"sources":["Components/interfaces.ts","Components/ApplicationLine.tsx","Components/OrganizerItem.tsx","Components/AddApplication.tsx","Components/CollapseTitle.tsx","Components/Organizer.tsx","utils/arrayHelpers.ts","App.js","serviceWorker.js","index.js"],"names":["ApplicationState","getStateIcon","state","Todo","Sent","MeetingScheduled","Waiting","Accepted","Refused","ApplicationLine","props","handleDelete","bind","handleStateChange","event","this","onDelete","id","option","onStateChange","value","url","stateOptions","Object","values","filter","key","map","label","icon","selectedOption","find","o","labelId","displayedUrl","link","replace","className","name","options","defaultValue","formatOptionLabel","optionId","role","aria-labelledby","onChange","isSearchable","menuPlacement","href","onClick","React","Component","OrganizerItem","draggableId","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","margin","defaultState","AddApplication","handleNameChange","handleLinkChange","handleSubmit","setState","target","onAddApplication","preventDefault","onSubmit","htmlFor","type","CollapseTitle","arrowClass","isOpened","toggleOpening","xmlns","width","height","stroke","fill","stroke-width","d","defaultData","Organizer","apps","storedApps","localStorage","getItem","JSON","parse","setItem","stringify","archives","forEach","app","uuidv4","applications","archivesOpened","addApplication","deleteApplication","changeApplicationState","updateStoredData","onDragEnd","toggleArchives","data","newElement","concat","applicationState","result","source","destination","getList","droppableId","isDestMain","newArray","list","sourceIndex","destIndex","splice","removed","reorder","updatedLists","sourceList","destinationList","destinationIndex","sourceClone","destClone","move","applicationMapper","item","noContentClasses","length","droppableProps","placeholder","isDropDisabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b448260d.chunk.js","sourcesContent":["export enum ApplicationState {\n  Todo = 1,\n  Sent,\n  MeetingScheduled,\n  Waiting,\n  Accepted,\n  Refused\n}\n\nexport function getStateIcon(state: ApplicationState | number): string {\n\tswitch (state) {\n\t\tcase ApplicationState.Todo: return 'â˜•';\n\t\tcase ApplicationState.Sent: return 'ðŸ“¨';\n\t\tcase ApplicationState.MeetingScheduled: return 'ðŸŽ¤';\n\t\tcase ApplicationState.Waiting: return 'ðŸ˜±';\n\t\tcase ApplicationState.Accepted: return 'ðŸŽ‰';\n\t\tcase ApplicationState.Refused: return 'ðŸ’©';\n\t\tdefault: return '';\n\t}\n}\n\nexport interface ApplicationData {\n  name: string,\n  state: ApplicationState,\n  link?: string,\n  applicationDate?: Date,\n  nextMeeting?: Date,\n}\n\nexport interface Application extends ApplicationData {\n\tid: string\n}\n\nexport interface LineProps extends Application {\n  onDelete: (id: string) => void,\n  onStateChange: (id: string, state: ApplicationState) => void\n}\n\nexport interface LineState {\n  applicationState: ApplicationState\n}\n\nexport interface OrganizerItemProps extends LineProps {\n  index: number\n}","import React from 'react';\nimport Select, {ValueType} from 'react-select';\nimport {ApplicationState, getStateIcon, LineProps, LineState} from './interfaces';\n\ninterface stateOption {\n  value: ApplicationState,\n  label: string,\n  icon: string\n}\n\nclass ApplicationLine extends React.Component<LineProps, LineState> {\n  constructor(props: LineProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleStateChange = this.handleStateChange.bind(this);\n  }\n\n  handleDelete(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    this.props.onDelete(this.props.id);\n  }\n\n  handleStateChange(option: ValueType<stateOption>) {\n    if (option) {\n      this.props.onStateChange(this.props.id, (option as stateOption).value);\n    }\n  }\n\n  render() {\n    const states = Object.values(ApplicationState).filter(key => typeof key === 'number') as ApplicationState[];\n    const stateOptions: Array<stateOption> = states.map(state => ({\n      value: state,\n      label: ApplicationState[state],\n      icon: getStateIcon(state)\n    }));\n\n    const selectedOption = stateOptions.find(o => o.value === this.props.state);\n\n    const optionformatter = (option: stateOption) =>  {\n      const optionId = \"option\" + option.value;\n      return (<div className=\"optionContainer\">\n        <span className=\"icon\" role=\"img\" aria-labelledby={optionId}>{option.icon}</span>\n        <span id={optionId}>{option.label}</span>\n      </div>);\n    }\n\n    const labelId = 'linkLabel' + this.props.id;\n    const displayedUrl = simplifyUrl(this.props.link);\n\n    return (\n      <div className={`application app${ApplicationState[this.props.state]}`}>\n        <div className=\"applicationContent\">\n          <span>{this.props.name}</span>\n          \n          <Select\n            className=\"stateSelector\"\n            options={stateOptions}\n            defaultValue={selectedOption}\n            formatOptionLabel={optionformatter}\n            onChange={this.handleStateChange}\n            isSearchable={false}\n            menuPlacement=\"auto\"\n          />\n\n          <div className=\"link\">\n            {this.props.link &&\n              <a href={this.props.link}>\n                <span className=\"icon\" role=\"img\" aria-labelledby={labelId}>ðŸ”—</span>\n                <span className=\"linkLabel\" id={labelId}>{displayedUrl}</span>\n              </a>\n            }\n          </div>\n        </div>\n\n        <button className=\"deleteButton\" onClick={this.handleDelete}></button>\n      </div>\n    );\n  }\n}\n\nfunction simplifyUrl(url?: string) {\n  if (!url)\n    return '';\n\n  return url.replace('https://', '').replace('http://', '');\n}\n\nexport default ApplicationLine;\n","import React, { Component } from 'react';\nimport { OrganizerItemProps } from './interfaces';\nimport { Draggable } from 'react-beautiful-dnd';\nimport ApplicationLine from './ApplicationLine';\n\nclass OrganizerItem extends Component<OrganizerItemProps> {\n\trender() {\n\t\treturn (\n\t\t\t<Draggable draggableId={this.props.id} index={this.props.index}>\n\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tstyle={{margin: '0 0 8px 0', ...provided.draggableProps.style}}\n\t\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\t<ApplicationLine {...this.props} />\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t);\n\t}\n}\n\nexport default OrganizerItem;\n","import React from 'react';\nimport {ApplicationState, ApplicationData} from './interfaces';\n\nexport interface AddProps {\n  onAddApplication: (data: ApplicationData) => void\n}\n\nconst defaultState = {\n  name: '',\n  link: '',\n  state: ApplicationState.Todo\n};\n\nclass AddApplication extends React.Component<AddProps, ApplicationData> {\n  constructor(props: AddProps) {\n    super(props);\n    this.state = defaultState;\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleLinkChange = this.handleLinkChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleNameChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleLinkChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      link: event.target.value\n    });\n  }\n\n  handleSubmit(event: React.FormEvent<HTMLElement>) {\n    this.props.onAddApplication({\n      name: this.state.name,\n      link: this.state.link,\n      state: ApplicationState.Todo\n    });\n    this.setState(defaultState);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form className=\"addForm\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input id=\"name\" type=\"text\" value={this.state.name} onChange={this.handleNameChange} />\n\n        <label htmlFor=\"link\">Job offer link:</label>\n        <input id=\"link\" type=\"text\" value={this.state.link} onChange={this.handleLinkChange} />\n        \n        <input type=\"submit\" value=\"Add\" />\n      </form>\n    );\n  }\n}\n\nexport default AddApplication;\n","import React, {Component} from 'react';\n\ninterface CollapseTitleProps {\n\tname: string,\n\tisOpened: boolean,\n\ttoggleOpening: () => void;\n}\n\n\nclass CollapseTitle extends Component<CollapseTitleProps> {\n\trender() {\n\t\tconst arrowClass = 'collapseArrow' + (this.props.isOpened ? '' : ' closedArrow');\n\t\treturn (\n\t\t\t<div className=\"collapseTitle\" onClick={this.props.toggleOpening}>\n\t\t\t\t<svg className={arrowClass} xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"12px\">\n\t\t\t\t\t<path stroke=\"#000\" fill=\"none\" stroke-width=\"2\" d=\"M 18,2 L 10,10 2,2\" />\n\t\t\t\t</svg>\n\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CollapseTitle;","import React, {Fragment} from 'react';\nimport {Application, ApplicationData, ApplicationState} from './interfaces';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { DragDropContext, Droppable, DropResult, DraggableLocation } from 'react-beautiful-dnd';\nimport {Collapse} from 'react-collapse';\nimport { v4 as uuidv4 } from 'uuid';\nimport OrganizerItem from './OrganizerItem';\nimport AddApplication from './AddApplication';\nimport CollapseTitle from './CollapseTitle';\nimport { reorder, move } from '../utils/arrayHelpers';\n\nconst defaultData = [\n  {id:'9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6a', name: \"Space X\", link: \"https://www.spacex.com/careers/index.html\", state: ApplicationState.Sent},\n  {id:'9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6b', name: \"ESA\", link: \"http://www.esa.int/About_Us/Careers_at_ESA\", state: ApplicationState.Waiting},\n  {id:'9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6c', name: \"NASA\", link: \"https://www.nasa.gov/careers\", state: ApplicationState.Todo}\n];\n\ninterface OrganizerProps { }\n\ninterface OrganizerState {\n  applications: Application[];\n  archives: Application[];\n  archivesOpened: boolean;\n}\n\nclass Organizer extends React.Component<OrganizerProps, OrganizerState> {\n  constructor(props: OrganizerProps) {\n    super(props);\n\n    let apps = defaultData;\n    let storedApps = localStorage.getItem('applications');\n    if (storedApps) {\n      apps = JSON.parse(storedApps);\n    } else {\n      localStorage.setItem('applications', JSON.stringify(apps));\n    }\n\n    const archives: Application[] = JSON.parse(localStorage.getItem('archives') || '[]');\n\n    // transform old ids\n    apps.forEach(app => {\n      if (typeof(app.id) === 'number') {\n        app.id = uuidv4();\n      }\n    });\n\n    this.state = {\n      applications: apps,\n      archives,\n      archivesOpened: false\n    }\n\n    this.addApplication = this.addApplication.bind(this);\n    this.deleteApplication = this.deleteApplication.bind(this);\n    this.changeApplicationState = this.changeApplicationState.bind(this);\n    this.updateStoredData = this.updateStoredData.bind(this);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.toggleArchives = this.toggleArchives.bind(this);\n  }\n\n  addApplication(data: ApplicationData) {\n    const newElement: Application = {\n      id: uuidv4(),\n      ...data\n    };\n\n    this.setState(\n      state => ({\n        applications: state.applications.concat(newElement)\n      }),\n      () => this.updateStoredData()\n    );\n  }\n\n  deleteApplication(id: string) {\n    this.setState(\n      state => ({\n        applications: state.applications.filter(app => app.id !== id)\n      }),\n      () => this.updateStoredData()\n    );\n  }\n\n  changeApplicationState(id: string, applicationState: ApplicationState) {\n    this.setState(\n      state => ({\n        applications: state.applications.map(app => {\n          if (app.id === id) {\n            return {...app, state: applicationState};\n          }\n\n          return app;\n        })\n      }),\n      () => this.updateStoredData()\n    );\n  }\n\n  updateStoredData() {\n    localStorage.setItem('applications', JSON.stringify(this.state.applications));\n    localStorage.setItem('archives', JSON.stringify(this.state.archives));\n  }\n\n  onDragEnd(result: DropResult) {\n    const {source, destination} = result;\n\n    if (destination) {\n\n      const getList = (droppableId: string, state: OrganizerState) => {\n        if (droppableId === \"mainDroppable\")\n          return state.applications;\n        else\n          return state.archives;\n      };\n\n      const isDestMain = destination.droppableId === \"mainDroppable\";\n\n      if (source.droppableId === destination.droppableId) {\n        this.setState((state) => {\n          const newArray = reorder(\n            getList(destination.droppableId, state),\n            source.index,\n            destination.index);\n\n          if (isDestMain)\n            return { applications: newArray } as OrganizerState;\n          else\n            return { archives: newArray } as OrganizerState;\n        },\n        () => this.updateStoredData());\n      } else {\n        this.setState(state => {\n          const updatedLists = move(\n            getList(source.droppableId, state),\n            getList(destination.droppableId, state),\n            source.index,\n            destination.index);\n\n          if (isDestMain) {\n            return { \n              applications: updatedLists.destination,\n              archives: updatedLists.source\n            };\n          } else {\n            return { \n              applications: updatedLists.source,\n              archives: updatedLists.destination\n            };\n          }\n        },\n        () => this.updateStoredData());\n      }\n    }\n  }\n\n  toggleArchives() {\n    this.setState(state => ({\n      archivesOpened: !state.archivesOpened\n    }));\n  }\n\n  render() {\n    const applicationMapper = (item: Application, index: number) => (\n      <OrganizerItem \n        key={item.id}\n        index={index}\n        onDelete={this.deleteApplication}\n        onStateChange={this.changeApplicationState}\n        {...item}\n      />);\n\n    let noContentClasses = \"archivesNoContentMessage\";\n    if (this.state.archives.length > 0) {\n      noContentClasses += \" hidden\";\n    }\n\n    return (\n      <Fragment>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"mainDroppable\">\n            {(provided, snapshot) => (\n              <div {...provided.droppableProps} ref={provided.innerRef} >\n                  {this.state.applications.map(applicationMapper)}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n\n          <CollapseTitle name=\"Archives\" isOpened={this.state.archivesOpened} toggleOpening={this.toggleArchives} />\n\n          <Collapse isOpened={this.state.archivesOpened}>\n            <div className=\"archivesZone\">\n              <i className={noContentClasses} >drop some items here !</i>\n              <Droppable droppableId=\"archivesDroppable\" isDropDisabled={!this.state.archivesOpened}>\n                {(provided, snapshot) => (\n                  <div {...provided.droppableProps} ref={provided.innerRef} className=\"archives\">\n                    {this.state.archives.map(applicationMapper)}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n          </Collapse>\n        </DragDropContext>\n\n        <AddApplication onAddApplication={this.addApplication} />\n      </Fragment>\n    );\n  }\n}\n\nexport default Organizer;\n","\nexport function reorder<T>(list: T[], sourceIndex: number, destIndex: number) : T[]\n{\n    const result = [...list];\n    const [removed] = result.splice(sourceIndex, 1);\n    result.splice(destIndex, 0, removed);\n\n    return result;\n};\n\nexport interface movedLists<T> {\n  source: T[];\n  destination: T[];\n}\n\nexport function move<T>(sourceList: T[], destinationList: T[], sourceIndex: number, destinationIndex: number) \n: movedLists<T>\n{\n  const sourceClone = [...sourceList];\n  const destClone = [...destinationList];\n  const [removed] = sourceClone.splice(sourceIndex, 1);\n\n  destClone.splice(destinationIndex, 0, removed);\n\n  return {\n    source: sourceClone,\n    destination: destClone\n  };\n};","import React from 'react';\nimport './App.css';\nimport Organizer from './Components/Organizer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"appContent\">\n        <h3>Job applications state tracking</h3>\n        <h4>stay organized !</h4>\n        <Organizer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}