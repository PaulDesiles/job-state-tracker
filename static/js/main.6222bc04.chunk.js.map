{"version":3,"sources":["Components/interfaces.ts","Components/ApplicationLine.tsx","Components/OrganizerItem.tsx","Components/AddApplication.tsx","Components/CollapseTitle.tsx","Components/Exporter.tsx","Components/Organizer.tsx","utils/arrayHelpers.ts","App.js","serviceWorker.js","index.js"],"names":["ApplicationState","getStateIcon","state","Todo","Sent","MeetingScheduled","Waiting","Accepted","Refused","ApplicationLine","props","handleDelete","bind","handleStateChange","event","this","onDelete","id","option","onStateChange","value","url","stateOptions","Object","values","filter","key","map","label","icon","selectedOption","find","o","labelId","displayedUrl","link","replace","className","name","options","defaultValue","formatOptionLabel","optionId","role","aria-labelledby","onChange","isSearchable","menuPlacement","href","onClick","React","Component","OrganizerItem","draggableId","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","margin","defaultState","AddApplication","handleNameChange","handleLinkChange","handleSubmit","setState","target","onAddApplication","preventDefault","onSubmit","htmlFor","type","CollapseTitle","arrowClass","isOpened","toggleOpening","xmlns","width","height","stroke","fill","strokeWidth","d","Exporter","getState","hiddenDownloadRef","useRef","hiddenUploadRef","useState","dlUrl","setDlUrl","useEffect","current","click","URL","revokeObjectURL","fileLoaded","evt","fileContent","result","newState","JSON","parse","applications","archives","console","log","error","display","serialized","stringify","blob","Blob","createObjectURL","download","multiple","accept","files","file","reader","FileReader","onload","readAsText","importJson","defaultData","Organizer","apps","storedApps","localStorage","getItem","setItem","forEach","app","uuidv4","archivesOpened","retrieveState","addApplication","deleteApplication","changeApplicationState","updateStoredData","onDragEnd","toggleArchives","data","newElement","concat","applicationState","source","destination","getList","droppableId","isDestMain","newArray","list","sourceIndex","destIndex","splice","removed","reorder","updatedLists","sourceList","destinationList","destinationIndex","sourceClone","destClone","move","applicationMapper","item","noContentClasses","length","droppableProps","placeholder","isDropDisabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6222bc04.chunk.js","sourcesContent":["export enum ApplicationState {\r\n  Todo = 1,\r\n  Sent,\r\n  MeetingScheduled,\r\n  Waiting,\r\n  Accepted,\r\n  Refused\r\n}\r\n\r\nexport function getStateIcon(state: ApplicationState | number): string {\r\n\tswitch (state) {\r\n\t\tcase ApplicationState.Todo: return '☕';\r\n\t\tcase ApplicationState.Sent: return '📨';\r\n\t\tcase ApplicationState.MeetingScheduled: return '🎤';\r\n\t\tcase ApplicationState.Waiting: return '😱';\r\n\t\tcase ApplicationState.Accepted: return '🎉';\r\n\t\tcase ApplicationState.Refused: return '💩';\r\n\t\tdefault: return '';\r\n\t}\r\n}\r\n\r\nexport interface ApplicationData {\r\n  name: string,\r\n  state: ApplicationState,\r\n  link?: string,\r\n  applicationDate?: Date,\r\n  nextMeeting?: Date,\r\n}\r\n\r\nexport interface Application extends ApplicationData {\r\n\tid: string\r\n}\r\n\r\nexport interface LineProps extends Application {\r\n  onDelete: (id: string) => void,\r\n  onStateChange: (id: string, state: ApplicationState) => void\r\n}\r\n\r\nexport interface LineState {\r\n  applicationState: ApplicationState\r\n}\r\n\r\nexport interface OrganizerItemProps extends LineProps {\r\n  index: number\r\n}","import React from 'react';\r\nimport Select, {ValueType} from 'react-select';\r\nimport {ApplicationState, getStateIcon, LineProps, LineState} from './interfaces';\r\n\r\ninterface stateOption {\r\n  value: ApplicationState,\r\n  label: string,\r\n  icon: string\r\n}\r\n\r\nclass ApplicationLine extends React.Component<LineProps, LineState> {\r\n  constructor(props: LineProps) {\r\n    super(props);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleStateChange = this.handleStateChange.bind(this);\r\n  }\r\n\r\n  handleDelete(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n    this.props.onDelete(this.props.id);\r\n  }\r\n\r\n  handleStateChange(option: ValueType<stateOption>) {\r\n    if (option) {\r\n      this.props.onStateChange(this.props.id, (option as stateOption).value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const states = Object.values(ApplicationState).filter(key => typeof key === 'number') as ApplicationState[];\r\n    const stateOptions: Array<stateOption> = states.map(state => ({\r\n      value: state,\r\n      label: ApplicationState[state],\r\n      icon: getStateIcon(state)\r\n    }));\r\n\r\n    const selectedOption = stateOptions.find(o => o.value === this.props.state);\r\n\r\n    const optionformatter = (option: stateOption) =>  {\r\n      const optionId = \"option\" + option.value;\r\n      return (<div className=\"optionContainer\">\r\n        <span className=\"icon\" role=\"img\" aria-labelledby={optionId}>{option.icon}</span>\r\n        <span id={optionId}>{option.label}</span>\r\n      </div>);\r\n    }\r\n\r\n    const labelId = 'linkLabel' + this.props.id;\r\n    const displayedUrl = simplifyUrl(this.props.link);\r\n\r\n    return (\r\n      <div className={`application app${ApplicationState[this.props.state]}`}>\r\n        <div className=\"applicationContent\">\r\n          <span>{this.props.name}</span>\r\n          \r\n          <Select\r\n            className=\"stateSelector\"\r\n            options={stateOptions}\r\n            defaultValue={selectedOption}\r\n            formatOptionLabel={optionformatter}\r\n            onChange={this.handleStateChange}\r\n            isSearchable={false}\r\n            menuPlacement=\"auto\"\r\n          />\r\n\r\n          <div className=\"link\">\r\n            {this.props.link &&\r\n              <a href={this.props.link}>\r\n                <span className=\"icon\" role=\"img\" aria-labelledby={labelId}>🔗</span>\r\n                <span className=\"linkLabel\" id={labelId}>{displayedUrl}</span>\r\n              </a>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"deleteButton\" onClick={this.handleDelete}></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction simplifyUrl(url?: string) {\r\n  if (!url)\r\n    return '';\r\n\r\n  return url.replace('https://', '').replace('http://', '');\r\n}\r\n\r\nexport default ApplicationLine;\r\n","import React, { Component } from 'react';\r\nimport { OrganizerItemProps } from './interfaces';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport ApplicationLine from './ApplicationLine';\r\n\r\nclass OrganizerItem extends Component<OrganizerItemProps> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Draggable draggableId={this.props.id} index={this.props.index}>\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\tstyle={{margin: '0 0 8px 0', ...provided.draggableProps.style}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t<ApplicationLine {...this.props} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t</Draggable>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default OrganizerItem;\r\n","import React from 'react';\r\nimport {ApplicationState, ApplicationData} from './interfaces';\r\n\r\nexport interface AddProps {\r\n  onAddApplication: (data: ApplicationData) => void\r\n}\r\n\r\nconst defaultState = {\r\n  name: '',\r\n  link: '',\r\n  state: ApplicationState.Todo\r\n};\r\n\r\nclass AddApplication extends React.Component<AddProps, ApplicationData> {\r\n  constructor(props: AddProps) {\r\n    super(props);\r\n    this.state = defaultState;\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleLinkChange = this.handleLinkChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleNameChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({\r\n      name: event.target.value\r\n    });\r\n  }\r\n\r\n  handleLinkChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({\r\n      link: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event: React.FormEvent<HTMLElement>) {\r\n    this.props.onAddApplication({\r\n      name: this.state.name,\r\n      link: this.state.link,\r\n      state: ApplicationState.Todo\r\n    });\r\n    this.setState(defaultState);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"addForm\" onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input id=\"name\" type=\"text\" value={this.state.name} onChange={this.handleNameChange} />\r\n\r\n        <label htmlFor=\"link\">Job offer link:</label>\r\n        <input id=\"link\" type=\"text\" value={this.state.link} onChange={this.handleLinkChange} />\r\n        \r\n        <input type=\"submit\" value=\"Add\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddApplication;\r\n","import React, {Component} from 'react';\r\n\r\ninterface CollapseTitleProps {\r\n\tname: string,\r\n\tisOpened: boolean,\r\n\ttoggleOpening: () => void;\r\n}\r\n\r\n\r\nclass CollapseTitle extends Component<CollapseTitleProps> {\r\n\trender() {\r\n\t\tconst arrowClass = 'collapseArrow' + (this.props.isOpened ? '' : ' closedArrow');\r\n\t\treturn (\r\n\t\t\t<div className=\"collapseTitle\" onClick={this.props.toggleOpening}>\r\n\t\t\t\t<svg className={arrowClass} xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"12px\">\r\n\t\t\t\t\t<path stroke=\"#000\" fill=\"none\" strokeWidth=\"2\" d=\"M 18,2 L 10,10 2,2\" />\r\n\t\t\t\t</svg>\r\n\t\t\t\t<strong>{this.props.name}</strong>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CollapseTitle;","import React, { FunctionComponent, useState, useRef, useEffect, ChangeEvent } from 'react';\r\nimport { OrganizerState } from './Organizer';\r\n\r\ninterface ExporterProps {\r\n    getState: () => OrganizerState,\r\n    setState: (state: OrganizerState) => void;\r\n};\r\n\r\n\r\nconst Exporter: FunctionComponent<ExporterProps> = \r\n({ getState, setState }) => {\r\n    const hiddenDownloadRef = useRef<HTMLAnchorElement>(null);\r\n    const hiddenUploadRef = useRef<HTMLInputElement>(null);\r\n    const [ dlUrl, setDlUrl ] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (dlUrl && hiddenDownloadRef?.current) {\r\n            hiddenDownloadRef.current.click(); \r\n            URL.revokeObjectURL(dlUrl);  // free up storage--no longer needed.\r\n            setDlUrl(\"\")\r\n        }\r\n    }, [dlUrl, hiddenDownloadRef]);\r\n\r\n    let exportAsJson: () => void =\r\n        function () {\r\n            var serialized = JSON.stringify(getState());\r\n            const blob = new Blob([serialized]);\r\n            const url = URL.createObjectURL(blob);\r\n            setDlUrl(url);\r\n        };\r\n\r\n    let importJson: (f: FileList | null) => void =\r\n        function (files: FileList | null) {\r\n            if (files && files[0]) {\r\n                console.log('start import');\r\n                const file = files[0];\r\n                const reader = new FileReader();\r\n                reader.onload = fileLoaded;\r\n                reader.readAsText(file);\r\n            } else {\r\n                console.log('empty file : abort import');\r\n            }\r\n        };\r\n    \r\n    let fileLoaded: (e: ProgressEvent<FileReader>) => void =\r\n        function (evt: ProgressEvent<FileReader>) {\r\n            try {\r\n                const fileContent = evt?.target?.result;\r\n                if (fileContent) {\r\n                    const newState = JSON.parse(fileContent as string);\r\n                    if (newState && newState.applications && newState.archives) {\r\n                        setState(newState);\r\n                        console.log('imported');\r\n                    } else {\r\n                        console.log('invalid content');\r\n                    }\r\n                } else {\r\n                    console.log('null target content');\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n    return (<div style={{ display: 'flex'}}>\r\n        <button style={{ margin: '0 10px 10px 0'}} onClick={exportAsJson}>Export as json</button>\r\n        <button style={{ margin: '0 10px 10px 0'}} onClick={() => hiddenUploadRef.current?.click()}>Import json</button>\r\n\r\n        <a style={{ display: 'none' }}\r\n             download=\"export.json\"\r\n             href={dlUrl}\r\n             ref={hiddenDownloadRef}\r\n        >download it</a>\r\n\r\n        <input type=\"file\" \r\n            style={{ display: 'none' }}\r\n            multiple={false}\r\n            accept=\".json,application/json\"\r\n            onChange={evt => importJson(evt.target.files)}\r\n            ref={hiddenUploadRef}\r\n          />\r\n    </div>);\r\n}\r\n\r\n\r\nexport default Exporter;","import React, {Fragment} from 'react';\r\nimport {Application, ApplicationData, ApplicationState} from './interfaces';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { DragDropContext, Droppable, DropResult, DraggableLocation } from 'react-beautiful-dnd';\r\nimport {Collapse} from 'react-collapse';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport OrganizerItem from './OrganizerItem';\r\nimport AddApplication from './AddApplication';\r\nimport CollapseTitle from './CollapseTitle';\r\nimport { reorder, move } from '../utils/arrayHelpers';\r\nimport Exporter from './Exporter'\r\n\r\nconst defaultData = [\r\n  {id:'9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6a', name: \"Space X\", link: \"https://www.spacex.com/careers/index.html\", state: ApplicationState.Sent},\r\n  {id:'9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6b', name: \"ESA\", link: \"http://www.esa.int/About_Us/Careers_at_ESA\", state: ApplicationState.Waiting},\r\n  {id:'9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6c', name: \"NASA\", link: \"https://www.nasa.gov/careers\", state: ApplicationState.Todo}\r\n];\r\n\r\ninterface OrganizerProps { }\r\n\r\nexport interface OrganizerState {\r\n  applications: Application[];\r\n  archives: Application[];\r\n  archivesOpened: boolean;\r\n}\r\n\r\nclass Organizer extends React.Component<OrganizerProps, OrganizerState> {\r\n  constructor(props: OrganizerProps) {\r\n    super(props);\r\n\r\n    let apps = defaultData;\r\n    let storedApps = localStorage.getItem('applications');\r\n    if (storedApps) {\r\n      apps = JSON.parse(storedApps);\r\n    } else {\r\n      localStorage.setItem('applications', JSON.stringify(apps));\r\n    }\r\n\r\n    const archives: Application[] = JSON.parse(localStorage.getItem('archives') || '[]');\r\n\r\n    // transform old ids\r\n    apps.forEach(app => {\r\n      if (typeof(app.id) === 'number') {\r\n        app.id = uuidv4();\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      applications: apps,\r\n      archives,\r\n      archivesOpened: false\r\n    }\r\n\r\n    this.retrieveState = this.retrieveState.bind(this);\r\n    this.addApplication = this.addApplication.bind(this);\r\n    this.deleteApplication = this.deleteApplication.bind(this);\r\n    this.changeApplicationState = this.changeApplicationState.bind(this);\r\n    this.updateStoredData = this.updateStoredData.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n    this.toggleArchives = this.toggleArchives.bind(this);\r\n  }\r\n\r\n  retrieveState(state: OrganizerState) {\r\n    this.setState(\r\n      state,\r\n      () => this.updateStoredData()\r\n    );\r\n  }\r\n\r\n  addApplication(data: ApplicationData) {\r\n    const newElement: Application = {\r\n      id: uuidv4(),\r\n      ...data\r\n    };\r\n\r\n    this.setState(\r\n      state => ({\r\n        applications: state.applications.concat(newElement)\r\n      }),\r\n      () => this.updateStoredData()\r\n    );\r\n  }\r\n\r\n  deleteApplication(id: string) {\r\n    this.setState(\r\n      state => ({\r\n        applications: state.applications.filter(app => app.id !== id)\r\n      }),\r\n      () => this.updateStoredData()\r\n    );\r\n  }\r\n\r\n  changeApplicationState(id: string, applicationState: ApplicationState) {\r\n    this.setState(\r\n      state => ({\r\n        applications: state.applications.map(app => {\r\n          if (app.id === id) {\r\n            return {...app, state: applicationState};\r\n          }\r\n\r\n          return app;\r\n        })\r\n      }),\r\n      () => this.updateStoredData()\r\n    );\r\n  }\r\n\r\n  updateStoredData() {\r\n    localStorage.setItem('applications', JSON.stringify(this.state.applications));\r\n    localStorage.setItem('archives', JSON.stringify(this.state.archives));\r\n  }\r\n\r\n  onDragEnd(result: DropResult) {\r\n    const {source, destination} = result;\r\n\r\n    if (destination) {\r\n\r\n      const getList = (droppableId: string, state: OrganizerState) => {\r\n        if (droppableId === \"mainDroppable\")\r\n          return state.applications;\r\n        else\r\n          return state.archives;\r\n      };\r\n\r\n      const isDestMain = destination.droppableId === \"mainDroppable\";\r\n\r\n      if (source.droppableId === destination.droppableId) {\r\n        this.setState((state) => {\r\n          const newArray = reorder(\r\n            getList(destination.droppableId, state),\r\n            source.index,\r\n            destination.index);\r\n\r\n          if (isDestMain)\r\n            return { applications: newArray } as OrganizerState;\r\n          else\r\n            return { archives: newArray } as OrganizerState;\r\n        },\r\n        () => this.updateStoredData());\r\n      } else {\r\n        this.setState(state => {\r\n          const updatedLists = move(\r\n            getList(source.droppableId, state),\r\n            getList(destination.droppableId, state),\r\n            source.index,\r\n            destination.index);\r\n\r\n          if (isDestMain) {\r\n            return { \r\n              applications: updatedLists.destination,\r\n              archives: updatedLists.source\r\n            };\r\n          } else {\r\n            return { \r\n              applications: updatedLists.source,\r\n              archives: updatedLists.destination\r\n            };\r\n          }\r\n        },\r\n        () => this.updateStoredData());\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleArchives() {\r\n    this.setState(state => ({\r\n      archivesOpened: !state.archivesOpened\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const applicationMapper = (item: Application, index: number) => (\r\n      <OrganizerItem \r\n        key={item.id}\r\n        index={index}\r\n        onDelete={this.deleteApplication}\r\n        onStateChange={this.changeApplicationState}\r\n        {...item}\r\n      />);\r\n\r\n    let noContentClasses = \"archivesNoContentMessage\";\r\n    if (this.state.archives.length > 0) {\r\n      noContentClasses += \" hidden\";\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Exporter getState={() => this.state} setState={this.retrieveState} />\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId=\"mainDroppable\">\r\n            {(provided, snapshot) => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef} >\r\n                  {this.state.applications.map(applicationMapper)}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n          <CollapseTitle name=\"Archives\" isOpened={this.state.archivesOpened} toggleOpening={this.toggleArchives} />\r\n\r\n          <Collapse isOpened={this.state.archivesOpened}>\r\n            <div className=\"archivesZone\">\r\n              <i className={noContentClasses} >drop some items here !</i>\r\n              <Droppable droppableId=\"archivesDroppable\" isDropDisabled={!this.state.archivesOpened}>\r\n                {(provided, snapshot) => (\r\n                  <div {...provided.droppableProps} ref={provided.innerRef} className=\"archives\">\r\n                    {this.state.archives.map(applicationMapper)}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </Collapse>\r\n        </DragDropContext>\r\n\r\n        <AddApplication onAddApplication={this.addApplication} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Organizer;\r\n","\r\nexport function reorder<T>(list: T[], sourceIndex: number, destIndex: number) : T[]\r\n{\r\n    const result = [...list];\r\n    const [removed] = result.splice(sourceIndex, 1);\r\n    result.splice(destIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\nexport interface movedLists<T> {\r\n  source: T[];\r\n  destination: T[];\r\n}\r\n\r\nexport function move<T>(sourceList: T[], destinationList: T[], sourceIndex: number, destinationIndex: number) \r\n: movedLists<T>\r\n{\r\n  const sourceClone = [...sourceList];\r\n  const destClone = [...destinationList];\r\n  const [removed] = sourceClone.splice(sourceIndex, 1);\r\n\r\n  destClone.splice(destinationIndex, 0, removed);\r\n\r\n  return {\r\n    source: sourceClone,\r\n    destination: destClone\r\n  };\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport Organizer from './Components/Organizer'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"appContent\">\r\n        <h3>Job applications state tracking</h3>\r\n        <h4>stay organized !</h4>\r\n        <Organizer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}